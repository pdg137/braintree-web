#!/usr/bin/env node
// vim: ft=javascript

var pkg = require('../package.json');
var bwr = require('../bower.json');
var assert = require('assert');
var jsdom = require('jsdom');
var fs = require('fs');
var https = require('https');

[
  'name',
  'version',
  'description',
  'main',
  'license',
  'keywords',
  'homepage',
  'repository',
].forEach(function(key) {
  assert.deepEqual(pkg[key], bwr[key]);
});

// authors
assert.equal(bwr.authors.length, 1);
assert.equal(pkg.author, bwr.authors[0]);

// file list for inclusion
var pkgIgnored = fs.readFileSync('./.npmignore', 'utf8').trim().split('\n');
assert.deepEqual(pkgIgnored, bwr.ignore);

// pull down braintree.js
var req, dest;
function reportError(e) {
  console.log(e);
  dest.close();
  process.exit(1);
}

dest = fs.createWriteStream('./dist/braintree.js');
dest.on('error', reportError);

req = https.request({
  host: 'js.braintreegateway.com',
  path: '/v2/braintree.js'
});
req.on('response', function (res) {
  if (res.statusCode === 200) {
    res.pipe(dest);
  } else {
    reportError(res);
  }
});
req.end();

// verify versions all match
dest.on('finish', function () {
  jsdom.env('', ['../dist/braintree.js'], function (errors, window) {
    assert.equal(
      pkg.version,
      window.braintree.VERSION,
      'bower/npm version (' + pkg.version +') does not match hotlinked version (' + window.braintree.VERSION + ')');
  });
});
